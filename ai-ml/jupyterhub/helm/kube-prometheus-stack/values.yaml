prometheus:
  prometheusSpec:
    resources:
      requests:
        memory: 4Gi
        cpu: 2
    retention: 5h
    scrapeInterval: 30s
    evaluationInterval: 30s
    scrapeTimeout: 10s
    storageSpec:
      volumeClaimTemplate:
        metadata:
          name: data
        spec:
          storageClassName: gp3
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 100Gi
    # Scrape Cost metrics for Kubecost and JupyterHub add-ons
    additionalScrapeConfigs:
      - job_name: kubecost
        honor_labels: true
        scrape_interval: 1m
        scrape_timeout: 10s
        metrics_path: /metrics
        scheme: http
        dns_sd_configs:
          - names:
              - kubecost-cost-analyzer.kubecost.svc
            type: 'A'
            port: 9003
      - job_name: jupyterhub
        honor_labels: true
        scrape_interval: 1m
        scrape_timeout: 10s
        metrics_path: /hub/metrics
        scheme: http
        dns_sd_configs:
          - names:
              - hub.jupyterhub.svc
            type: 'A'
            port: 8081
      - job_name: gpu-metrics
        scrape_interval: 1m
        metrics_path: /metrics
        scheme: http
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - gpu-operator
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_node_name]
          action: replace
          target_label: kubernetes_node

alertmanager:
  enabled: false

grafana:
  enabled: true
  defaultDashboardsEnabled: true
  resources:
    requests:
      memory: 4Gi
      cpu: 2
  sidecar:
    datasources:
      alertmanager:
        enabled: false

kube-state-metrics:
  metricLabelsAllowlist:
    # to select jupyterhub component pods and get the hub usernames
    - pods=[app,component,hub.jupyter.org/username]
    # allowing all labels is probably fine for nodes, since they don't churn much, unlike pods
    - nodes=[*]
